__NUXT_JSONP__("/2023-05-30-access-states-value-outside-of-being-installed-on-a-view", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return {data:[{article:{slug:"2023-05-30-access-states-value-outside-of-being-installed-on-a-view",title:i,bg:"bg-blue-300",createdAt:j,updatedAt:j,toc:[],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:i}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"TL;DR: this happens when trying to access a binding to a property on an "},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:" that's wrapped with "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" from within the observing View. The fix is to change the "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" to an "},{type:b,tag:c,props:{},children:[{type:a,value:h}]},{type:a,value:" and update the reference from "},{type:b,tag:c,props:{},children:[{type:a,value:k}]},{type:a,value:" to "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:". That's the existing well published fix and the rest of this post is about the why."}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"This is a confusing warning message, the phrasing of "},{type:b,tag:c,props:{},children:[{type:a,value:"outside of being installed on a View"}]},{type:a,value:" could give the impression that this is a lifecycle issue and so maybe the fix is to adjust the timing of when the property is accessed, like moving it within a "},{type:b,tag:c,props:{},children:[{type:a,value:".onAppear"}]},{type:a,value:" block or similar."}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"What the warning is in fact saying is that you can't use "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" on something that isn't a "},{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:a,value:" such as an "},{type:b,tag:c,props:{},children:[{type:a,value:"ObservedObject"}]},{type:a,value:" and then reference that from your "},{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:a,value:" and expect it to behave the same way."}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"The reason is more or less obvious once you've realised you meant to use an "},{type:b,tag:c,props:{},children:[{type:a,value:h}]},{type:a,value:", but none the less. An "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" knows that it belongs to the View it was declared in. The backing store for the "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" SwiftUI created for us then notifies the View to update when that value is mutated. If we have an "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" in an "},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:" it has no way of knowing what View it is being used in, therefore nothing can be updated when it's mutated. So instead we just get a "},{type:b,tag:c,props:{},children:[{type:a,value:"constant binding of the initial value"}]},{type:a,value:", or in other words we get the value we initialised the property to and no updated values thereafter."}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"So instead we can use an "},{type:b,tag:c,props:{},children:[{type:a,value:h}]},{type:a,value:" (which is likely what we meant to do when we encountered this warning) instead of "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:n}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"This will bring us an error similar to the following "},{type:b,tag:c,props:{},children:[{type:a,value:"Cannot convert value of type 'Published\u003CDouble\u003E.Publisher' to expected argument type 'Binding\u003CDouble\u003E'"}]},{type:a,value:". Which is because our "},{type:b,tag:c,props:{},children:[{type:a,value:k}]},{type:a,value:" now accesses the projected value of an "},{type:b,tag:c,props:{},children:[{type:a,value:h}]},{type:a,value:" which is a Publisher, so we need to change this to "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:" which gives us the a binding to an "},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:", a binding being the projected value of an "},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:n}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"All that to say "},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:" properties should be "},{type:b,tag:c,props:{},children:[{type:a,value:"private"}]},{type:a,value:" and I can't think of any good reason to use them in an "},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:" in any case. I just thought this was an interesting error and wanted to run through the why of it."}]},{type:a,value:e},{type:b,tag:d,props:{},children:[{type:a,value:"For me, this is just a reminder of how much is magicked for us when working with SwiftUI."}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002F2023-05-30-access-states-value-outside-of-being-installed-on-a-view",extension:".md"}}],fetch:{},mutations:void 0}}("text","element","code","p","\n","@State","ObservableObject","@Published","Accessing State's value outside of being installed on a View. This will result in a constant Binding of the initial value and will not update.","2023-05-30T00:00:00.000Z","model.$property","$model.property","View",".")));